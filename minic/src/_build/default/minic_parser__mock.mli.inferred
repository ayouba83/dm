type token =
    XOR
  | WHILE
  | VOID
  | SUB
  | SET
  | SEMI
  | RPAR
  | RETURN
  | PUTCHAR
  | PLUS
  | ORL
  | OR
  | NOT
  | NE
  | MUL
  | LT
  | LSL
  | LPAR
  | LE
  | INT
  | INCR
  | IF
  | IDENT of string
  | GT
  | GE
  | FOR
  | EQ
  | EOF
  | END
  | ELSE
  | DIV
  | DECR
  | CST of int
  | COMA
  | BOOL_CST of bool
  | BOOL
  | BEGIN
  | ASR
  | ANDL
  | AND
val menhir_begin_marker : int
val xv_variable_decl : string * Minic_ast.typ * int
val xv_typ : Minic_ast.typ
val xv_program : Minic_ast.prog
val xv_param_list : (string * Minic_ast.typ) list
val xv_param_dcl : string * Minic_ast.typ
val xv_locale_dcl : string * Minic_ast.typ
val xv_list_locale_dcl_ : (string * Minic_ast.typ) list
val xv_list_instruction_ : Minic_ast.seq
val xv_instruction : Minic_ast.instr
val xv_instr_form : Minic_ast.instr
val xv_function_decl : Minic_ast.fun_def
val xv_expression : Minic_ast.expr
val xv_declaration_list :
  (string * Minic_ast.typ * int) list * Minic_ast.fun_def list
val xv_args_list : Minic_ast.expr list
val menhir_end_marker : int
